[General]
tkenv-image-path=../../images
output-scalar-file-append = false
sim-time-limit=20s



##########################################################
#			Simulation parameters                        #
##########################################################
#record-eventlog = true
#eventlog-options = module, displaystring, message
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))
tkenv-default-config = 
#debug-on-errors=true
#**.coreDebug = true
 

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################### RLC parameters #######################
#**.fragmentSize=30B
#**.timeout=50s
################### MAC parameters #######################
**.mac.queueSize = 1MiB
**.mac.maxBytesPerTti = 1KiB
**.mac.macDelay.result-recording-modes = all
**.mac.macThroughput.result-recording-modes = all

# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

################ PhyLayer parameters #####################
**.nic.phy.usePropagationDelay = true
**.nic.phy.channelModel=xmldoc("config_channel.xml")

################ Feedback parameters #####################
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################

# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

**.mobility.initFromDisplayString = true

# UEs
**.enableHandover = false


################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

# General
**.deployer.positionUpdateInterval = 0.001s
**.deployer.broadcastMessageInterval = 1s

# RUs
**.deployer.numRus = 0
**.deployer.ruRange = 50
**.deployer.ruTxPower = "50,50,50;"
**.deployer.ruStartingAngle = 0deg
**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)

# AMC
**.deployer.numRbDl = 6
**.deployer.numRbUl = 6
**.deployer.rbyDl = 12
**.deployer.rbyUl = 12
**.deployer.rbxDl = 7
**.deployer.rbxUl = 7
**.deployer.rbPilotDl = 3
**.deployer.rbPilotUl = 0
**.deployer.signalDl = 1
**.deployer.signalUl = 1
**.deployer.numBands = 1
**.deployer.numPreferredBands = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.mac.amcMode = "AUTO"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.pfAlpha = 0.95
**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 26
**.microTxPower = 20
**.*TxPower = 46

[Config VoIP]
network = lte.simulations.networks.MultiCell


# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"


# connect each UE to the eNB
**.ue1.macCellId = 1
**.ue1.masterId = 1

**.ue2.macCellId = 1
**.ue2.masterId = 1

**.ue3.macCellId = 1
**.ue3.masterId = 1

**.ue4.macCellId = 2
**.ue4.masterId = 2

**.ue5.macCellId = 2
**.ue5.masterId = 2

**.ue6.macCellId = 2
**.ue6.masterId = 2

**.ue7.macCellId =3
**.ue7.masterId = 3

**.ue8.macCellId = 3
**.ue8.masterId = 3

**.ue9.macCellId = 3
**.ue9*.masterId = 3

**.ue10*.macCellId = 4
**.ue10*.masterId = 4

**.ue11*.macCellId = 4
**.ue11*.masterId = 4

**.ue12*.macCellId =4
**.ue12*.masterId = 4

**.ue13*.macCellId = 5
**.ue13*.masterId = 5

**.ue14*.macCellId =5
**.ue14*.masterId = 5

**.ue15*.macCellId =5
**.ue15*.masterId = 5

# one UDP application for each user
*.ue*.numUdpApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numUdpApps) 
#*.server.numUdpApps = 1


# positioning and mobility
*.ue*.mobility.acceleration = 0
*.ue*.mobility.angle = uniform(0deg, 360deg)
#*.ue*.mobility.constraintAreaMaxX = 1000m
#*.ue*.mobility.constraintAreaMaxY = 1000m
#*.ue*.mobility.constraintAreaMinX = 200m
#*.ue*.mobility.constraintAreaMinY = 200m
*.ue*.mobility.initFromDisplayString = false
*.ue*.mobility.initialX = uniform(200m,1000m)
*.ue*.mobility.initialY = uniform(450m,1000m)
*.ue*.mobility.initialZ = 0

*.eNodeB*.mobility.initFromDisplayString = false
*.eNodeB1.mobility.initialX = 200m 
*.eNodeB1.mobility.initialY = 900m
*.eNodeB2.mobility.initialX = 900m
*.eNodeB2.mobility.initialY = 900m
*.eNodeB3.mobility.initialX = 900m
*.eNodeB3.mobility.initialY = 500m
*.eNodeB4.mobility.initialX = 200m
*.eNodeB4.mobility.initialY = 500m
*.eNodeB5.mobility.initialX = 450m
*.eNodeB5.mobility.initialY = 750m
##
#*.eNodeB*.mobility.initFromDisplayString = false
#*.eNodeB1.mobility.initialX = 200m 
#*.eNodeB1.mobility.initialY = 900m
#*.eNodeB2.mobility.initialX = 450m
#*.eNodeB2.mobility.initialY = 900m
#*.eNodeB3.mobility.initialX = 450m
#*.eNodeB3.mobility.initialY = 700m
#*.eNodeB4.mobility.initialX = 200m
#*.eNodeB4.mobility.initialY = 700m
#*.eNodeB5.mobility.initialX = 300m
#*.eNodeB5.mobility.initialY = 750m
#*.eNodeB*.mobility.constraintAreaMinX = 400m
#*.eNodeB*.mobility.constraintAreaMinY = 800m
#*.ue*.mobility.speed = 1mps
#*.ue*.mobilityType = "LinearMobility"

## positions of the UE 

#*.ue1.mobility.initialX= 250m
#*.ue1.mobility.initialY=800m
#*.ue2.mobility.initialX= 225m
#*.ue2.mobility.initialY=755m
#*.ue3.mobility.initialX= 300m
#*.ue3.mobility.initialY=790m
#
#*.ue4.mobility.initialX= 250m
#*.ue4.mobility.initialY=650m
#*.ue5.mobility.initialX= 220m
#*.ue5.mobility.initialY=660m
#*.ue6.mobility.initialX= 225m
#*.ue6.mobility.initialY=500m
#
#
#*.ue7.mobility.initialX= 600m
#*.ue7.mobility.initialY=300m
#*.ue8.mobility.initialX= 400m
#*.ue8.mobility.initialY=300m
#*.ue9.mobility.initialX= 300m
#*.ue9.mobility.initialY=400m
#
#*.ue10.mobility.initialX= 250m
#*.ue10.mobility.initialY=400m
#*.ue11.mobility.initialX= 240m
#*.ue11.mobility.initialY=440m
#*.ue12.mobility.initialX= 450m
#*.ue12.mobility.initialY=400m
#
#
#*.ue13.mobility.initialX= 650m
#*.ue13.mobility.initialY=500m
#*.ue14.mobility.initialX= 350m
#*.ue14.mobility.initialY=740m
#*.ue15.mobility.initialX= 525m
#*.ue15.mobility.initialY=450m

#============= Application Setup =============
*.server.numUdpApps = 15

*.ue*.numUdpApps = 1

## Voipp Recriver
*.ue*.udpApp[*].typename = "VoIPReceiver"
*.ue*.udpApp[*].localPort = 3000
.ue*.udpApp[*].serverAddress = "server"


*.server.udpApp[*].PacketSize = 500
#*.server.udpApp[*].destAddress = "ue["+string(ancestorIndex(1))+"]" # obtain the address of the client by reading its index in the array of udp Apps


*.server.udpApp[1].destAddress = "ue1"
*.server.udpApp[2].destAddress = "ue2"
*.server.udpApp[3].destAddress = "ue3"
*.server.udpApp[4].destAddress = "ue4"
*.server.udpApp[5].destAddress = "ue5"
*.server.udpApp[6].destAddress = "ue6"
*.server.udpApp[7].destAddress = "ue7"
*.server.udpApp[8].destAddress = "ue8"
*.server.udpApp[9].destAddress = "ue9"
*.server.udpApp[10].destAddress = "ue10"
*.server.udpApp[11].destAddress = "ue11"
*.server.udpApp[12].destAddress = "ue12"
*.server.udpApp[13].destAddress = "ue13"
*.server.udpApp[14].destAddress = "ue14"
*.server.udpApp[15].destAddress = "ue15"

*.server.udpApp[*].destPort = 3000
*.server.udpApp[*].localPort = 3088+ancestorIndex(0) 
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].startTime = uniform(0s,0.02s)

#------------------------------------#
# This configurations tests three types of well-known schedulers, namely DRR, 
# MAXCI and PF, in a scenario with VoIP like traffic. 
# The load of the system is varied by means of packet size and amount of UEs
[Config InterferenceTest]
output-scalar-file = ${resultdir}/${configname}-${iterationvars}-Final_Far_14_5_phy.sca
output-vector-file = ${resultdir}/${configname}-${iterationvars}-Final_Far_14_5_phy.vec
seed-set = ${repetition}


extends = VoIP
sim-time-limit = 50s
repeat = 1



**.result-recording-modes = default
**.ue*.nic*.phy*.averageCqiDlvect:vector.vector-recording= true

**.vector-recording = true

*.eNodeB*.nic.phy.txDirection = "ANISOTROPIC"
*.eNodeB1.nic.phy.txAngle = 45
*.eNodeB2.nic.phy.txAngle = 135
*.eNodeB3.nic.phy.txAngle = 150
*.eNodeB4.nic.phy.txAngle = 160
*.eNodeB5.nic.phy.txAngle = 180


#*.extCell[*].txPower = 20
#*.extCell[*].txDirection = "ANISOTROPIC"
#*.extCell[*].bandAllocationType = "FULL_ALLOC" #,"RANDOM_ALLOC","CONTIGUOUS_ALLOC"}
#*.extCell[*].bandUtilization = 0.5

#*.extCell[0].position_x = 100m
#*.extCell[0].position_y = 650m 
#*.extCell[0].txAngle = 315

#*.extCell[1].position_x = 200m
#*.extCell[1].position_y = 400m
#*.extCell[1].txAngle = 225

#*.extCell[2].position_x = 250m
#*.extCell[2].position_y = 430m
#*.extCell[2].txAngle = 225



**.deployer.numRbDl = 6
**.deployer.numRbUl = 6

**.numBands = 6
#------------------------------------#